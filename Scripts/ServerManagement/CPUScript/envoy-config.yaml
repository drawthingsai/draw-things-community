static_resources:
  listeners:
  # HTTPS listener for external access
  - name: https_listener
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 8443  # Envoy HTTPS port
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_https
          route_config:
            name: https_route
            virtual_hosts:
            - name: image_generation_service_https
              domains: ["*"]
              routes:
              # Only allow Pubkey method
              - match:
                  path: "/ImageGenerationService/Pubkey"
                route:
                  cluster: image_generation_grpc_service
                  timeout: 60s
              # Block all other ImageGenerationService methods
              - match:
                  prefix: "/ImageGenerationService/"
                direct_response:
                  status: 403
                  body:
                    inline_string: "Access denied: Only Pubkey method is allowed"
              # Block any other requests
              - match:
                  prefix: "/"
                direct_response:
                  status: 404
                  body:
                    inline_string: "Not found"
              cors:
                allow_origin_string_match:
                - safe_regex:
                    regex: ".*"
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout,authorization,x-grpc-web
                allow_credentials: true
                max_age: "1728000"
                expose_headers: custom-header-1,grpc-status,grpc-message,grpc-status-details-bin
          http_filters:
          - name: envoy.filters.http.grpc_web
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
          - name: envoy.filters.http.cors
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
            - certificate_chain:
                filename: "/etc/letsencrypt/live/compute.drawthings.ai/fullchain.pem"  # Update with your domain
              private_key:
                filename: "/etc/letsencrypt/live/compute.drawthings.ai/privkey.pem"   # Update with your domain

  clusters:
  - name: image_generation_grpc_service
    connect_timeout: 30s
    type: logical_dns
    http2_protocol_options: {}
    lb_policy: round_robin
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: localhost
    load_assignment:
      cluster_name: image_generation_grpc_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1      # Use localhost since using --network host
                port_value: 443         # External port where proxy_service is exposed

admin:
  address:
    socket_address:
      protocol: TCP
      address: 127.0.0.1